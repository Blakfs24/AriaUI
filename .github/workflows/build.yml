# .github/workflows/build.yml

# Workflow name
name: Build Flutter App

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the main branch
  push:
    branches: [ main ]
  # Triggers the workflow on pull request events but only for the main branch
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Job to build the application for Windows
  build-windows:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      # Sets up the Flutter SDK environment
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable' # Use the stable channel, adjust if needed e.g., 'beta'

      # Gets Flutter dependencies
      - name: Install dependencies
        run: flutter pub get

      # Builds the Flutter application for Windows in release mode
      - name: Build Windows application
        run: flutter build windows --release

      # Uploads the built Windows application artifacts
      - name: Upload Windows build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-windows # Name of the artifact
          path: build/windows/x64/runner/Release/*.exe # Path to the build output directory

  # Job to build the application for macOS x86_64
  build-macos-x64:
    name: Build macOS (x86_64) # More descriptive job name
    # The type of runner that the job will run on (typically x86_64)
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      # Build specifically for macos-x64
      - name: Build macOS application (x86_64)
        run: flutter build macos --release

      - name: Upload macOS x64 build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-macos-x64 # Unique artifact name
          path: build/macos/Build/Products/Release/*.app # Upload the .app bundle

  # Job to build the application for macOS ARM64
  build-macos-arm64:
    name: Build macOS (ARM64) # More descriptive job name
    # Use a runner known to support ARM64 builds, macos-14 is a good choice
    runs-on: macos-14

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      # Build specifically for macos-arm64
      - name: Build macOS application (ARM64)
        run: flutter build macos --release

      - name: Upload macOS ARM64 build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-macos-arm64 # Unique artifact name
          path: build/macos/Build/Products/Release/*.app # Upload the .app bundle
